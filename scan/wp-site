#!/bin/bash

cd "$(dirname "$0")/.."
# Update the git submodule(s) containing wpscan (and potentially other/future projects) so that we always run the latest version.
git submodule update --remote
sites=$(ls /etc/nginx/sites-enabled)


###
# WPScan
###
# WPScan requires it's dependencies to be in PATH, easiest to just cd to folder.
cd "scan/wpscan"
wpscan=./wpscan.rb
# Update dependencies.
bundle install --without test --path ./vendor/bundle
# Update the vulnerability database.
$wpscan --update

for site in $sites; do
	echo "________________________________________________________"
	echo "Scanning $site for WordPress vulnerabilities using wpscan:"
	$wpscan -u "$site" --follow-redirection -e u,vt,vp
	echo "‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾"
done


###
# SSLLabs Scan
###
cd "../ssllabs-scan"
if ! make; then
	echo Failed to compile ssllabs-scan!
	exit 1
fi
for site in $sites; do
	echo "________________________________________________________"
	echo "Checking $site HTTPS vulnerabilities using ssllabs-scan:"
	./ssllabs-scan --usecache --grade --verbosity error "$site"
	echo "‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾"
done
